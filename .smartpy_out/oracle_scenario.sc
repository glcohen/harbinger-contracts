[{"shortname": "Update_Once_With_Valid_Data", "longname": "Update Once With Valid Data", "scenario": [{"action": "html", "tag": "h1", "inner": "Update Once With Valid Data", "line_no": 141}, {"action": "html", "tag": "h2", "inner": "GIVEN an Oracle contract", "line_no": 143}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 47 ((literal (string \"XTZ-USD\") 147) (tuple (literal (timestamp 0) 49) (tuple (literal (timestamp 0) 49) (tuple (literal (intOrNat 0) 147) (tuple (literal (intOrNat 0) 147) (tuple (literal (intOrNat 0) 147) (tuple (literal (intOrNat 0) 147) (literal (intOrNat 0) 147) 147) 147) 147) 147) 147) 147))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 47)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 147, "show": true, "accept_unknown_types": false}, {"action": "html", "tag": "h2", "inner": "AND an update", "line_no": 149}, {"action": "html", "tag": "h2", "inner": "WHEN the oracle is updated", "line_no": 172}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 174 ((literal (string \"XTZ-USD\") 181) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 165) (tuple (literal (timestamp 1) 151) (tuple (literal (timestamp 2) 152) (tuple (literal (intOrNat 3) 165) (tuple (literal (intOrNat 4) 165) (tuple (literal (intOrNat 5) 165) (tuple (literal (intOrNat 6) 165) (literal (intOrNat 7) 165) 165) 165) 165) 165) 165) 165) 165) 165) \"Raw\" 166) 166) (tuple (literal (timestamp 1) 151) (tuple (literal (timestamp 2) 152) (tuple (literal (intOrNat 3) 181) (tuple (literal (intOrNat 4) 181) (tuple (literal (intOrNat 5) 181) (tuple (literal (intOrNat 6) 181) (literal (intOrNat 7) 181) 181) 181) 181) 181) 181) 181) 173))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 174)", "line_no": 181, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": true}, {"action": "html", "tag": "h2", "inner": "THEN the oracle contains the data points", "line_no": 183}, {"action": "verify", "condition": "(eq (literal (timestamp 1) 151) (first (getItem (attr (contractData 0 181) \"oracleData\" 184) (literal (string \"XTZ-USD\") 184) 184) 191) 199)", "line_no": 199}, {"action": "verify", "condition": "(eq (literal (timestamp 2) 152) (first (second (getItem (attr (contractData 0 181) \"oracleData\" 184) (literal (string \"XTZ-USD\") 184) 184) 185) 192) 200)", "line_no": 200}, {"action": "verify", "condition": "(eq (first (second (second (getItem (attr (contractData 0 181) \"oracleData\" 184) (literal (string \"XTZ-USD\") 184) 184) 185) 186) 193) (literal (intOrNat 3) 201) 201)", "line_no": 201}, {"action": "verify", "condition": "(eq (first (second (second (second (getItem (attr (contractData 0 181) \"oracleData\" 184) (literal (string \"XTZ-USD\") 184) 184) 185) 186) 187) 194) (literal (intOrNat 4) 202) 202)", "line_no": 202}, {"action": "verify", "condition": "(eq (first (second (second (second (second (getItem (attr (contractData 0 181) \"oracleData\" 184) (literal (string \"XTZ-USD\") 184) 184) 185) 186) 187) 188) 195) (literal (intOrNat 5) 203) 203)", "line_no": 203}, {"action": "verify", "condition": "(eq (first (second (second (second (second (second (getItem (attr (contractData 0 181) \"oracleData\" 184) (literal (string \"XTZ-USD\") 184) 184) 185) 186) 187) 188) 189) 196) (literal (intOrNat 6) 204) 204)", "line_no": 204}, {"action": "verify", "condition": "(eq (second (second (second (second (second (second (getItem (attr (contractData 0 181) \"oracleData\" 184) (literal (string \"XTZ-USD\") 184) 184) 185) 186) 187) 188) 189) 197) (literal (intOrNat 7) 205) 205)", "line_no": 205}]}, {"shortname": "Second_Update_Overwrites_First_Update", "longname": "Second Update Overwrites First Update", "scenario": [{"action": "html", "tag": "h1", "inner": "Second Update Overwrites First Update", "line_no": 275}, {"action": "html", "tag": "h2", "inner": "GIVEN an Oracle contract", "line_no": 277}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 281 ((literal (string \"XTZ-USD\") 289) (tuple (literal (timestamp 0) 836) (tuple (literal (timestamp 0) 838) (tuple (literal (intOrNat 0) 289) (tuple (literal (intOrNat 0) 289) (tuple (literal (intOrNat 0) 289) (tuple (literal (intOrNat 0) 289) (literal (intOrNat 0) 289) 289) 289) 289) 289) 289) 289))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 281)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 289, "show": true, "accept_unknown_types": false}, {"action": "html", "tag": "h2", "inner": "AND two updates", "line_no": 291}, {"action": "html", "tag": "h2", "inner": "WHEN the oracle is updated", "line_no": 334}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 337 ((literal (string \"XTZ-USD\") 351) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 306) (tuple (literal (timestamp 1) 292) (tuple (literal (timestamp 2) 293) (tuple (literal (intOrNat 3) 306) (tuple (literal (intOrNat 4) 306) (tuple (literal (intOrNat 5) 306) (tuple (literal (intOrNat 6) 306) (literal (intOrNat 7) 306) 306) 306) 306) 306) 306) 306) 306) 306) \"Raw\" 307) 307) (tuple (literal (timestamp 1) 292) (tuple (literal (timestamp 2) 293) (tuple (literal (intOrNat 3) 351) (tuple (literal (intOrNat 4) 351) (tuple (literal (intOrNat 5) 351) (tuple (literal (intOrNat 6) 351) (literal (intOrNat 7) 351) 351) 351) 351) 351) 351) 351) 335))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 337)", "line_no": 351, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": true}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 344 ((literal (string \"XTZ-USD\") 352) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 327) (tuple (literal (timestamp 8) 313) (tuple (literal (timestamp 9) 314) (tuple (literal (intOrNat 10) 327) (tuple (literal (intOrNat 11) 327) (tuple (literal (intOrNat 12) 327) (tuple (literal (intOrNat 13) 327) (literal (intOrNat 14) 327) 327) 327) 327) 327) 327) 327) 327) 327) \"Raw\" 328) 328) (tuple (literal (timestamp 8) 313) (tuple (literal (timestamp 9) 314) (tuple (literal (intOrNat 10) 352) (tuple (literal (intOrNat 11) 352) (tuple (literal (intOrNat 12) 352) (tuple (literal (intOrNat 13) 352) (literal (intOrNat 14) 352) 352) 352) 352) 352) 352) 352) 336))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 344)", "line_no": 352, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": true}, {"action": "html", "tag": "h2", "inner": "THEN the oracle contains the data points of the latter update", "line_no": 354}, {"action": "verify", "condition": "(eq (first (getItem (attr (contractData 0 352) \"oracleData\" 355) (literal (string \"XTZ-USD\") 355) 355) 362) (literal (timestamp 8) 313) 370)", "line_no": 370}, {"action": "verify", "condition": "(eq (first (second (getItem (attr (contractData 0 352) \"oracleData\" 355) (literal (string \"XTZ-USD\") 355) 355) 356) 363) (literal (timestamp 9) 314) 371)", "line_no": 371}, {"action": "verify", "condition": "(eq (first (second (second (getItem (attr (contractData 0 352) \"oracleData\" 355) (literal (string \"XTZ-USD\") 355) 355) 356) 357) 364) (literal (intOrNat 10) 372) 372)", "line_no": 372}, {"action": "verify", "condition": "(eq (first (second (second (second (getItem (attr (contractData 0 352) \"oracleData\" 355) (literal (string \"XTZ-USD\") 355) 355) 356) 357) 358) 365) (literal (intOrNat 11) 373) 373)", "line_no": 373}, {"action": "verify", "condition": "(eq (first (second (second (second (second (getItem (attr (contractData 0 352) \"oracleData\" 355) (literal (string \"XTZ-USD\") 355) 355) 356) 357) 358) 359) 366) (literal (intOrNat 12) 374) 374)", "line_no": 374}, {"action": "verify", "condition": "(eq (first (second (second (second (second (second (getItem (attr (contractData 0 352) \"oracleData\" 355) (literal (string \"XTZ-USD\") 355) 355) 356) 357) 358) 359) 360) 367) (literal (intOrNat 13) 375) 375)", "line_no": 375}, {"action": "verify", "condition": "(eq (second (second (second (second (second (second (getItem (attr (contractData 0 352) \"oracleData\" 355) (literal (string \"XTZ-USD\") 355) 355) 356) 357) 358) 359) 360) 368) (literal (intOrNat 14) 376) 376)", "line_no": 376}]}, {"shortname": "Update_Fails_With_Data_From_The_Same_Timestamp", "longname": "Update Fails With Data From The Same Timestamp", "scenario": [{"action": "html", "tag": "h1", "inner": "Update Fails With Data From The Same Timestamp", "line_no": 382}, {"action": "html", "tag": "h2", "inner": "GIVEN an Oracle contract", "line_no": 384}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 388 ((literal (string \"XTZ-USD\") 396) (tuple (literal (timestamp 0) 836) (tuple (literal (timestamp 0) 838) (tuple (literal (intOrNat 0) 396) (tuple (literal (intOrNat 0) 396) (tuple (literal (intOrNat 0) 396) (tuple (literal (intOrNat 0) 396) (literal (intOrNat 0) 396) 396) 396) 396) 396) 396) 396))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 388)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 396, "show": true, "accept_unknown_types": false}, {"action": "html", "tag": "h2", "inner": "AND an update", "line_no": 398}, {"action": "html", "tag": "h2", "inner": "WHEN the oracle is updated twice", "line_no": 420}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 422 ((literal (string \"XTZ-USD\") 429) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 413) (tuple (literal (timestamp 1) 399) (tuple (literal (timestamp 2) 400) (tuple (literal (intOrNat 3) 413) (tuple (literal (intOrNat 4) 413) (tuple (literal (intOrNat 5) 413) (tuple (literal (intOrNat 6) 413) (literal (intOrNat 7) 413) 413) 413) 413) 413) 413) 413) 413) 413) \"Raw\" 414) 414) (tuple (literal (timestamp 1) 399) (tuple (literal (timestamp 2) 400) (tuple (literal (intOrNat 3) 429) (tuple (literal (intOrNat 4) 429) (tuple (literal (intOrNat 5) 429) (tuple (literal (intOrNat 6) 429) (literal (intOrNat 7) 429) 429) 429) 429) 429) 429) 429) 421))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 422)", "line_no": 429, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": true}, {"action": "html", "tag": "h2", "inner": "THEN the second update fails", "line_no": 431}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 422 ((literal (string \"XTZ-USD\") 432) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 413) (tuple (literal (timestamp 1) 399) (tuple (literal (timestamp 2) 400) (tuple (literal (intOrNat 3) 413) (tuple (literal (intOrNat 4) 413) (tuple (literal (intOrNat 5) 413) (tuple (literal (intOrNat 6) 413) (literal (intOrNat 7) 413) 413) 413) 413) 413) 413) 413) 413) 413) \"Raw\" 414) 414) (tuple (literal (timestamp 1) 399) (tuple (literal (timestamp 2) 400) (tuple (literal (intOrNat 3) 432) (tuple (literal (intOrNat 4) 432) (tuple (literal (intOrNat 5) 432) (tuple (literal (intOrNat 6) 432) (literal (intOrNat 7) 432) 432) 432) 432) 432) 432) 432) 421))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 422)", "line_no": 432, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": false}]}, {"shortname": "Update_Fails_With_Data_From_The_Past", "longname": "Update Fails With Data From The Past", "scenario": [{"action": "html", "tag": "h1", "inner": "Update Fails With Data From The Past", "line_no": 438}, {"action": "html", "tag": "h2", "inner": "GIVEN an Oracle contract with some initial data.", "line_no": 440}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 445 ((literal (string \"XTZ-USD\") 453) (tuple (literal (timestamp 0) 836) (tuple (literal (timestamp 0) 838) (tuple (literal (intOrNat 0) 453) (tuple (literal (intOrNat 0) 453) (tuple (literal (intOrNat 0) 453) (tuple (literal (intOrNat 0) 453) (literal (intOrNat 0) 453) 453) 453) 453) 453) 453) 453))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 445)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 453, "show": true, "accept_unknown_types": false}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 477 ((literal (string \"XTZ-USD\") 484) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 469) (tuple (literal (timestamp 2) 455) (tuple (literal (timestamp 3) 456) (tuple (literal (intOrNat 3) 469) (tuple (literal (intOrNat 4) 469) (tuple (literal (intOrNat 5) 469) (tuple (literal (intOrNat 6) 469) (literal (intOrNat 7) 469) 469) 469) 469) 469) 469) 469) 469) 469) \"Raw\" 470) 470) (tuple (literal (timestamp 2) 455) (tuple (literal (timestamp 3) 456) (tuple (literal (intOrNat 3) 484) (tuple (literal (intOrNat 4) 484) (tuple (literal (intOrNat 5) 484) (tuple (literal (intOrNat 6) 484) (literal (intOrNat 7) 484) 484) 484) 484) 484) 484) 484) 476))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 477)", "line_no": 484, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": true}, {"action": "html", "tag": "h2", "inner": "WHEN the oracle is updated with a time in the past", "line_no": 486}, {"action": "html", "tag": "h2", "inner": "THEN the update in the past fails", "line_no": 510}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 502 ((literal (string \"XTZ-USD\") 511) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (timestamp 1) 488) (tuple (literal (timestamp 2) 489) (tuple (literal (intOrNat 3) 494) (tuple (literal (intOrNat 4) 494) (tuple (literal (intOrNat 5) 494) (tuple (literal (intOrNat 6) 494) (literal (intOrNat 7) 494) 494) 494) 494) 494) 494) 494) 494) \"Raw\" 495) 495) (tuple (literal (timestamp 1) 488) (tuple (literal (timestamp 2) 489) (tuple (literal (intOrNat 3) 511) (tuple (literal (intOrNat 4) 511) (tuple (literal (intOrNat 5) 511) (tuple (literal (intOrNat 6) 511) (literal (intOrNat 7) 511) 511) 511) 511) 511) 511) 511) 501))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 502)", "line_no": 511, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": false}]}, {"shortname": "Update_Fails_With_Untracked_Asset", "longname": "Update Fails With Untracked Asset", "scenario": [{"action": "html", "tag": "h1", "inner": "Update Fails With Untracked Asset", "line_no": 517}, {"action": "html", "tag": "h2", "inner": "GIVEN an Oracle contract", "line_no": 519}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 524 ((literal (string \"XTZ-USD\") 532) (tuple (literal (timestamp 0) 836) (tuple (literal (timestamp 0) 838) (tuple (literal (intOrNat 0) 532) (tuple (literal (intOrNat 0) 532) (tuple (literal (intOrNat 0) 532) (tuple (literal (intOrNat 0) 532) (literal (intOrNat 0) 532) 532) 532) 532) 532) 532) 532))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 524)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 532, "show": true, "accept_unknown_types": false}, {"action": "html", "tag": "h2", "inner": "WHEN the oracle is updated with an untracked asset", "line_no": 555}, {"action": "html", "tag": "h2", "inner": "THEN the update fails.", "line_no": 565}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 557 ((literal (string \"BTC-USD\") 566) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 548) (tuple (literal (timestamp 2) 534) (tuple (literal (timestamp 3) 535) (tuple (literal (intOrNat 3) 548) (tuple (literal (intOrNat 4) 548) (tuple (literal (intOrNat 5) 548) (tuple (literal (intOrNat 6) 548) (literal (intOrNat 7) 548) 548) 548) 548) 548) 548) 548) 548) 548) \"Raw\" 549) 549) (tuple (literal (timestamp 2) 534) (tuple (literal (timestamp 3) 535) (tuple (literal (intOrNat 3) 566) (tuple (literal (intOrNat 4) 566) (tuple (literal (intOrNat 5) 566) (tuple (literal (intOrNat 6) 566) (literal (intOrNat 7) 566) 566) 566) 566) 566) 566) 566) 556))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 557)", "line_no": 566, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": false}]}, {"shortname": "Update_Fails_With_Bad_Signature", "longname": "Update Fails With Bad Signature", "scenario": [{"action": "html", "tag": "h1", "inner": "Update Fails With Bad Signature", "line_no": 572}, {"action": "html", "tag": "h2", "inner": "GIVEN an Oracle contract", "line_no": 574}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 579 ((literal (string \"XTZ-USD\") 587) (tuple (literal (timestamp 0) 836) (tuple (literal (timestamp 0) 838) (tuple (literal (intOrNat 0) 587) (tuple (literal (intOrNat 0) 587) (tuple (literal (intOrNat 0) 587) (tuple (literal (intOrNat 0) 587) (literal (intOrNat 0) 587) 587) 587) 587) 587) 587) 587))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 579)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 587, "show": true, "accept_unknown_types": false}, {"action": "html", "tag": "h2", "inner": "AND an update signed by an alternative key", "line_no": 589}, {"action": "html", "tag": "h2", "inner": "WHEN the oracle is updated", "line_no": 613}, {"action": "html", "tag": "h2", "inner": "THEN the update fails", "line_no": 623}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 615 ((literal (string \"XTZ-USD\") 624) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"AlternativeAccount\" 590) \"secret_key\" 590) 590) (pack (tuple (literal (timestamp 1) 592) (tuple (literal (timestamp 2) 593) (tuple (literal (intOrNat 3) 606) (tuple (literal (intOrNat 4) 606) (tuple (literal (intOrNat 5) 606) (tuple (literal (intOrNat 6) 606) (literal (intOrNat 7) 606) 606) 606) 606) 606) 606) 606) 606) \"Raw\" 607) 607) (tuple (literal (timestamp 1) 592) (tuple (literal (timestamp 2) 593) (tuple (literal (intOrNat 3) 624) (tuple (literal (intOrNat 4) 624) (tuple (literal (intOrNat 5) 624) (tuple (literal (intOrNat 6) 624) (literal (intOrNat 7) 624) 624) 624) 624) 624) 624) 624) 614))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 615)", "line_no": 624, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": false}]}, {"shortname": "Revokes_An_Oracle", "longname": "Revokes An Oracle", "scenario": [{"action": "html", "tag": "h1", "inner": "Revokes An Oracle", "line_no": 630}, {"action": "html", "tag": "h2", "inner": "GIVEN an oracle contract and a correctly signed revoke message.", "line_no": 632}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 644 ((literal (string \"XTZ-USD\") 652) (tuple (literal (timestamp 0) 836) (tuple (literal (timestamp 0) 838) (tuple (literal (intOrNat 0) 652) (tuple (literal (intOrNat 0) 652) (tuple (literal (intOrNat 0) 652) (tuple (literal (intOrNat 0) 652) (literal (intOrNat 0) 652) 652) 652) 652) 652) 652) 652))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 644)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 652, "show": true, "accept_unknown_types": false}, {"action": "html", "tag": "h2", "inner": "WHEN revoke is called.", "line_no": 654}, {"action": "message", "id": 0, "message": "revoke", "params": "(reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (variant \"None\" (unit) -1) 634) \"Raw\" 635) 635)", "line_no": 655, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": true}, {"action": "html", "tag": "h2", "inner": "THEN the oracle is revoked", "line_no": 657}, {"action": "verify", "condition": "(invert (isVariant (attr (contractData 0 655) \"publicKey\" 658) \"Some\" 658) 658)", "line_no": 658}, {"action": "html", "tag": "h2", "inner": "AND future updates fail.", "line_no": 660}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 683 ((literal (string \"XTZ-USD\") 690) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 675) (tuple (literal (timestamp 1) 661) (tuple (literal (timestamp 2) 662) (tuple (literal (intOrNat 3) 675) (tuple (literal (intOrNat 4) 675) (tuple (literal (intOrNat 5) 675) (tuple (literal (intOrNat 6) 675) (literal (intOrNat 7) 675) 675) 675) 675) 675) 675) 675) 675) 675) \"Raw\" 676) 676) (tuple (literal (timestamp 1) 661) (tuple (literal (timestamp 2) 662) (tuple (literal (intOrNat 3) 690) (tuple (literal (intOrNat 4) 690) (tuple (literal (intOrNat 5) 690) (tuple (literal (intOrNat 6) 690) (literal (intOrNat 7) 690) 690) 690) 690) 690) 690) 690) 682))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 683)", "line_no": 690, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": false}]}, {"shortname": "Incorrect_Revoke_Fails_to_Revoke_An_Oracle", "longname": "Incorrect Revoke Fails to Revoke An Oracle", "scenario": [{"action": "html", "tag": "h1", "inner": "Incorrect Revoke Fails to Revoke An Oracle", "line_no": 696}, {"action": "html", "tag": "h2", "inner": "GIVEN an oracle contract and a revoke message signed by another account.", "line_no": 698}, {"action": "newContract", "id": 0, "export": "(storage (record 58 (oracleData (type_annotation (big_map 711 ((literal (string \"XTZ-USD\") 719) (tuple (literal (timestamp 0) 836) (tuple (literal (timestamp 0) 838) (tuple (literal (intOrNat 0) 719) (tuple (literal (intOrNat 0) 719) (tuple (literal (intOrNat 0) 719) (tuple (literal (intOrNat 0) 719) (literal (intOrNat 0) 719) 719) 719) 719) 719) 719) 719))) (bigmap \"string\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\"))))))) 711)) (publicKey (variant \"Some\" (reduce (attr (account_of_seed \"Test1\" 830) \"public_key\" 830) 830) 831)))\nstorage_type (())\nmessages ((push True ((set (operations 132) (cons (transfer (attr (data) \"oracleData\" 132) (literal (mutez 0) 132) (params 131) 132) (operations 132) 132) 132))) (revoke True ((verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (params 115) (pack (type_annotation (variant \"None\" (unit) -1) (option \"key\") 117) 118) 122) False 122) (set (attr (data) \"publicKey\" 121) (variant \"None\" (unit) -1) 125))) (update True ((forGroup \"assetData\" (items (params 73) 75) ((defineLocal \"compute_79\" (first (attr (iter \"assetData\" 76) \"value\" 79) 79) 79) (defineLocal \"compute_80\" (second (attr (iter \"assetData\" 76) \"value\" 79) 80) 80) (verify (contains (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 84) \"bad asset\" 83) (verify (check_signature (openVariant (attr (data) \"publicKey\" 121) \"Some\" 121) (getLocal \"compute_79\" 79) (pack (tuple (attr (iter \"assetData\" 76) \"key\" 78) (getLocal \"compute_80\" 80) 89) 89) 91) \"bad sig\" 90) (defineLocal \"compute_97\" (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 97) 97) (defineLocal \"compute_98\" (first (getLocal \"compute_97\" 97) 98) 98) (defineLocal \"compute_99\" (first (getLocal \"compute_80\" 80) 99) 99) (verify (gt (getLocal \"compute_99\" 99) (getLocal \"compute_98\" 98) 100) \"bad time\" 100) (set (getItem (attr (data) \"oracleData\" 132) (attr (iter \"assetData\" 76) \"key\" 78) 103) (getLocal \"compute_80\" 80) 103)) 76))))\nflags (Exception_Unit no_comment)\nglobals ()\nstorage_layout ()\nentry_points_layout ())", "line_no": 719, "show": true, "accept_unknown_types": false}, {"action": "html", "tag": "h2", "inner": "WHEN revoke is called", "line_no": 721}, {"action": "html", "tag": "h2", "inner": "THEN the call fails", "line_no": 722}, {"action": "message", "id": 0, "message": "revoke", "params": "(reduce (make_signature (reduce (attr (account_of_seed \"Incorrect_Account\" 700) \"secret_key\" 700) 700) (pack (variant \"None\" (unit) -1) 701) \"Raw\" 702) 702)", "line_no": 723, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": false}, {"action": "html", "tag": "h2", "inner": "AND future updates succeed", "line_no": 725}, {"action": "message", "id": 0, "message": "update", "params": "(type_annotation (map 748 ((literal (string \"XTZ-USD\") 755) (tuple (reduce (make_signature (reduce (attr (account_of_seed \"Test1\" 830) \"secret_key\" 830) 830) (pack (tuple (literal (string \"XTZ-USD\") 740) (tuple (literal (timestamp 1) 726) (tuple (literal (timestamp 2) 727) (tuple (literal (intOrNat 3) 740) (tuple (literal (intOrNat 4) 740) (tuple (literal (intOrNat 5) 740) (tuple (literal (intOrNat 6) 740) (literal (intOrNat 7) 740) 740) 740) 740) 740) 740) 740) 740) 740) \"Raw\" 741) 741) (tuple (literal (timestamp 1) 726) (tuple (literal (timestamp 2) 727) (tuple (literal (intOrNat 3) 755) (tuple (literal (intOrNat 4) 755) (tuple (literal (intOrNat 5) 755) (tuple (literal (intOrNat 6) 755) (literal (intOrNat 7) 755) 755) 755) 755) 755) 755) 755) 747))) (map \"string\" (pair \"signature\" (pair \"timestamp\" (pair \"timestamp\" (pair \"nat\" (pair \"nat\" (pair \"nat\" (pair \"nat\" \"nat\")))))))) 748)", "line_no": 755, "title": "", "messageClass": "", "source": "none", "sender": "none", "chain_id": "", "time": 0, "amount": "(literal (mutez 0) 1)", "show": true, "valid": true}]}]