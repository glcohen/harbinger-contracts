Comment...
 h1: Update with stale asset does not fail
Comment...
 h2: GIVEN an Oracle contract tracking two assets with an initial update
Creating contract
 -> (Pair {Elt "BTC-USD" (Pair "0" (Pair "0" (Pair 0 (Pair 0 (Pair 0 (Pair 0 0)))))); Elt "XTZ-USD" (Pair "0" (Pair "0" (Pair 0 (Pair 0 (Pair 0 (Pair 0 0))))))} (Some "edpkumfjciYdSYPzFt5dzWt9k974Wnp2qPwHqqjfsJvEwJWpYJnFdW"))
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testContractTypes.0.2.tz 2
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testContractCode.0.2.tz 151
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testContractCode.0.2.tz.json 276
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testPrettyPrint.0.2.py 27
Executing update(sp.set_type_expr({'XTZ-USD' : (sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(('XTZ-USD', (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))), message_format = 'Raw')), (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7))))))), 'BTC-USD' : (sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(('BTC-USD', (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))), message_format = 'Raw')), (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))}, sp.TMap(sp.TString, sp.TPair(sp.TSignature, sp.TPair(sp.TTimestamp, sp.TPair(sp.TTimestamp, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat))))))))))...
 -> (Pair {Elt "BTC-USD" (Pair "1" (Pair "2" (Pair 3 (Pair 4 (Pair 5 (Pair 6 7)))))); Elt "XTZ-USD" (Pair "1" (Pair "2" (Pair 3 (Pair 4 (Pair 5 (Pair 6 7))))))} (Some "edpkumfjciYdSYPzFt5dzWt9k974Wnp2qPwHqqjfsJvEwJWpYJnFdW"))
Comment...
 h2: WHEN an update is posted to the oracle with only one asset containing new data
Executing update(sp.set_type_expr({'XTZ-USD' : (sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(('XTZ-USD', (sp.timestamp(2), (sp.timestamp(3), (8, (9, (10, (11, 12)))))))), message_format = 'Raw')), (sp.timestamp(2), (sp.timestamp(3), (8, (9, (10, (11, 12))))))), 'BTC-USD' : (sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(('BTC-USD', (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))), message_format = 'Raw')), (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))}, sp.TMap(sp.TString, sp.TPair(sp.TSignature, sp.TPair(sp.TTimestamp, sp.TPair(sp.TTimestamp, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat))))))))))...
 -> (Pair {Elt "BTC-USD" (Pair "1" (Pair "2" (Pair 3 (Pair 4 (Pair 5 (Pair 6 7)))))); Elt "XTZ-USD" (Pair "2" (Pair "3" (Pair 8 (Pair 9 (Pair 10 (Pair 11 12))))))} (Some "edpkumfjciYdSYPzFt5dzWt9k974Wnp2qPwHqqjfsJvEwJWpYJnFdW"))
Comment...
 h2: THEN data for the asset with two updates is the second update.
Verifying sp.fst(sp.contract_data(0).oracleData['XTZ-USD']) == sp.timestamp(2)...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.7.tz 35
 OK
Verifying sp.fst(sp.snd(sp.contract_data(0).oracleData['XTZ-USD'])) == sp.timestamp(3)...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.8.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.contract_data(0).oracleData['XTZ-USD']))) == 8...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.9.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['XTZ-USD'])))) == 9...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.10.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['XTZ-USD']))))) == 10...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.11.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['XTZ-USD'])))))) == 11...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.12.tz 35
 OK
Verifying sp.snd(sp.snd(sp.snd(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['XTZ-USD'])))))) == 12...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.13.tz 35
 OK
Comment...
 h2: THEN data for the asset with two updates is the second update.
Verifying sp.fst(sp.contract_data(0).oracleData['BTC-USD']) == sp.timestamp(1)...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.15.tz 35
 OK
Verifying sp.fst(sp.snd(sp.contract_data(0).oracleData['BTC-USD'])) == sp.timestamp(2)...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.16.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.contract_data(0).oracleData['BTC-USD']))) == 3...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.17.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['BTC-USD'])))) == 4...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.18.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['BTC-USD']))))) == 5...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.19.tz 35
 OK
Verifying sp.fst(sp.snd(sp.snd(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['BTC-USD'])))))) == 6...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.20.tz 35
 OK
Verifying sp.snd(sp.snd(sp.snd(sp.snd(sp.snd(sp.snd(sp.contract_data(0).oracleData['BTC-USD'])))))) == 7...
 => ./.smartpy_out/Update_with_stale_asset_does_not_fail_interpreted/testVerify.21.tz 35
 OK