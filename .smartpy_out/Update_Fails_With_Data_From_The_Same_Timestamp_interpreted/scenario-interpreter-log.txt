Comment...
 h1: Update Fails With Data From The Same Timestamp
Comment...
 h2: GIVEN an Oracle contract
Creating contract
 -> (Pair {Elt "XTZ-USD" (Pair "0" (Pair "0" (Pair 0 (Pair 0 (Pair 0 (Pair 0 0))))))} (Some "edpkumfjciYdSYPzFt5dzWt9k974Wnp2qPwHqqjfsJvEwJWpYJnFdW"))
 => ./.smartpy_out/Update_Fails_With_Data_From_The_Same_Timestamp_interpreted/testContractTypes.0.2.tz 2
 => ./.smartpy_out/Update_Fails_With_Data_From_The_Same_Timestamp_interpreted/testContractCode.0.2.tz 159
 => ./.smartpy_out/Update_Fails_With_Data_From_The_Same_Timestamp_interpreted/testContractCode.0.2.tz.json 317
 => ./.smartpy_out/Update_Fails_With_Data_From_The_Same_Timestamp_interpreted/testPrettyPrint.0.2.py 22
Comment...
 h2: AND an update
Comment...
 h2: WHEN the oracle is updated twice
Executing update(sp.set_type_expr({'XTZ-USD' : (sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(('XTZ-USD', (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))), message_format = 'Raw')), (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))}, sp.TMap(sp.TString, sp.TPair(sp.TSignature, sp.TPair(sp.TTimestamp, sp.TPair(sp.TTimestamp, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat))))))))))...
 -> (Pair {Elt "XTZ-USD" (Pair "1" (Pair "2" (Pair 3 (Pair 4 (Pair 5 (Pair 6 7))))))} (Some "edpkumfjciYdSYPzFt5dzWt9k974Wnp2qPwHqqjfsJvEwJWpYJnFdW"))
Comment...
 h2: THEN the second update fails
Executing update(sp.set_type_expr({'XTZ-USD' : (sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(('XTZ-USD', (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))), message_format = 'Raw')), (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))}, sp.TMap(sp.TString, sp.TPair(sp.TSignature, sp.TPair(sp.TTimestamp, sp.TPair(sp.TTimestamp, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat))))))))))...
 -> --- Expected failure in transaction --- WrongCondition in line 97: sp.fst(sp.snd(assetData.value)) > sp.fst(self.data.oracleData[assetData.key])