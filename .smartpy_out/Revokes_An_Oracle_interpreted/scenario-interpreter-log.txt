Comment...
 h1: Revokes An Oracle
Comment...
 h2: GIVEN an oracle contract and a correctly signed revoke message.
Creating contract
 -> (Pair {Elt "XTZ-USD" (Pair "0" (Pair "0" (Pair 0 (Pair 0 (Pair 0 (Pair 0 0))))))} (Some "edpkumfjciYdSYPzFt5dzWt9k974Wnp2qPwHqqjfsJvEwJWpYJnFdW"))
 => ./.smartpy_out/Revokes_An_Oracle_interpreted/testContractTypes.0.2.tz 2
 => ./.smartpy_out/Revokes_An_Oracle_interpreted/testContractCode.0.2.tz 151
 => ./.smartpy_out/Revokes_An_Oracle_interpreted/testContractCode.0.2.tz.json 276
 => ./.smartpy_out/Revokes_An_Oracle_interpreted/testPrettyPrint.0.2.py 27
Comment...
 h2: WHEN revoke is called.
Executing revoke(sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(sp.none), message_format = 'Raw')))...
 -> (Pair {Elt "XTZ-USD" (Pair "0" (Pair "0" (Pair 0 (Pair 0 (Pair 0 (Pair 0 0))))))} None)
Comment...
 h2: THEN the oracle is revoked
Verifying ~ sp.contract_data(0).publicKey.is_some()...
 => ./.smartpy_out/Revokes_An_Oracle_interpreted/testVerify.6.tz 23
 OK
Comment...
 h2: AND future updates fail.
Executing update(sp.set_type_expr({'XTZ-USD' : (sp.reduce(sp.make_signature(secret_key = sp.reduce(sp.test_account("Test1").secret_key), message = sp.pack(('XTZ-USD', (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))), message_format = 'Raw')), (sp.timestamp(1), (sp.timestamp(2), (3, (4, (5, (6, 7)))))))}, sp.TMap(sp.TString, sp.TPair(sp.TSignature, sp.TPair(sp.TTimestamp, sp.TPair(sp.TTimestamp, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TPair(sp.TNat, sp.TNat))))))))))...
 -> --- Expected failure in transaction --- Not the proper variant constructor [Some] != [None] in [self.data.publicKey.open_some()].