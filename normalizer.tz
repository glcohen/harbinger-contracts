parameter (or (contract %get nat) (big_map %update string (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat))))))));
storage   (pair (pair (string %assetCode) (pair (nat %computedPrice) (timestamp %lastUpdateTime))) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))));
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    IF_LEFT
      {
        # == get ==
        # sp.transfer(self.data.computedPrice, sp.tez(0), params) # @parameter%get : @storage
        NIL operation; # list operation : @parameter%get : @storage
        SWAP;       # @parameter%get : list operation : @storage
        PUSH mutez 0; # mutez : @parameter%get : list operation : @storage
        DIG 3;      # @storage : mutez : @parameter%get : list operation
        DUP;        # @storage : @storage : mutez : @parameter%get : list operation
        DUG 4;      # @storage : mutez : @parameter%get : list operation : @storage
        CADAR;      # nat : mutez : @parameter%get : list operation : @storage
        TRANSFER_TOKENS; # operation : list operation : @storage
        CONS;       # list operation : @storage
      }
      {
        SWAP;       # @storage : @parameter%update
        # == update ==
        # sp.verify(sp.sender == self.data.oracleContract, message = 'bad sender') # @storage : @parameter%update
        DUP;        # @storage : @storage : @parameter%update
        DUG 2;      # @storage : @parameter%update : @storage
        CDADR;      # address : @parameter%update : @storage
        SENDER;     # address : address : @parameter%update : @storage
        COMPARE;    # int : @parameter%update : @storage
        EQ;         # bool : @parameter%update : @storage
        IF
          {}
          {
            PUSH string "bad sender"; # string : @parameter%update : @storage
            FAILWITH;   # FAILED
          }; # @parameter%update : @storage
        # compute_75 = sp.local("compute_75", params[self.data.assetCode]) # @parameter%update : @storage
        DUP;        # @parameter%update : @parameter%update : @storage
        DIG 2;      # @storage : @parameter%update : @parameter%update
        DUP;        # @storage : @storage : @parameter%update : @parameter%update
        DUG 3;      # @storage : @parameter%update : @parameter%update : @storage
        CAAR;       # string : @parameter%update : @parameter%update : @storage
        GET;        # option (pair timestamp (pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))))) : @parameter%update : @storage
        IF_SOME
          {
            # of_some: Get-item:75 # @some : @parameter%update : @storage
          }
          {
            PUSH int 75; # int : @parameter%update : @storage
            FAILWITH;   # FAILED
          }; # @some : @parameter%update : @storage
        # compute_78 = sp.local("compute_78", sp.fst(compute_75.value)) # @some : @parameter%update : @storage
        DUP;        # @some : @some : @parameter%update : @storage
        CAR;        # timestamp : @some : @parameter%update : @storage
        # sp.verify(compute_78.value > self.data.lastUpdateTime) # timestamp : @some : @parameter%update : @storage
        DIG 3;      # @storage : timestamp : @some : @parameter%update
        DUP;        # @storage : @storage : timestamp : @some : @parameter%update
        DUG 4;      # @storage : timestamp : @some : @parameter%update : @storage
        CADDR;      # timestamp : timestamp : @some : @parameter%update : @storage
        SWAP;       # timestamp : timestamp : @some : @parameter%update : @storage
        DUP;        # timestamp : timestamp : timestamp : @some : @parameter%update : @storage
        DUG 2;      # timestamp : timestamp : timestamp : @some : @parameter%update : @storage
        COMPARE;    # int : timestamp : @some : @parameter%update : @storage
        GT;         # bool : timestamp : @some : @parameter%update : @storage
        IF
          {
            DIG 2;      # @parameter%update : timestamp : @some : @storage
            DROP;       # timestamp : @some : @storage
          }
          {
            PUSH string "WrongCondition: compute_78.value > self.data.lastUpdateTime"; # string : timestamp : @some : @parameter%update : @storage
            FAILWITH;   # FAILED
          }; # timestamp : @some : @storage
        # self.data.lastUpdateTime = compute_78.value # timestamp : @some : @storage
        DIG 2;      # @storage : timestamp : @some
        DUP;        # @storage : @storage : timestamp : @some
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : @storage : timestamp : @some
        SWAP;       # @storage : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : timestamp : @some
        CAR;        # pair (string %assetCode) (pair (nat %computedPrice) (timestamp %lastUpdateTime)) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : timestamp : @some
        DUP;        # pair (string %assetCode) (pair (nat %computedPrice) (timestamp %lastUpdateTime)) : pair (string %assetCode) (pair (nat %computedPrice) (timestamp %lastUpdateTime)) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : timestamp : @some
        CAR;        # string : pair (string %assetCode) (pair (nat %computedPrice) (timestamp %lastUpdateTime)) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : timestamp : @some
        SWAP;       # pair (string %assetCode) (pair (nat %computedPrice) (timestamp %lastUpdateTime)) : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : timestamp : @some
        CDAR;       # nat : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : timestamp : @some
        DIG 3;      # timestamp : nat : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : @some
        SWAP;       # nat : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : @some
        PAIR;       # pair nat timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : @some
        SWAP;       # string : pair nat timestamp : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : @some
        PAIR;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : @some
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : @some
        SWAP;       # @some : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_85 = sp.local("compute_85", sp.snd(compute_75.value)) # @some : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_86 = sp.local("compute_86", sp.snd(compute_85.value)) # pair timestamp (pair nat (pair nat (pair nat (pair nat nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair nat (pair nat (pair nat (pair nat nat))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_87 = sp.local("compute_87", sp.snd(compute_86.value)) # pair nat (pair nat (pair nat (pair nat nat))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_88 = sp.local("compute_88", sp.snd(compute_87.value)) # pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair nat (pair nat (pair nat nat)) : pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_89 = sp.local("compute_89", sp.snd(compute_88.value)) # pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair nat (pair nat nat) : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_93 = sp.local("compute_93", sp.fst(compute_87.value)) # pair nat nat : pair nat (pair nat nat) : pair nat (pair nat (pair nat nat)) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DIG 2;      # pair nat (pair nat (pair nat nat)) : pair nat nat : pair nat (pair nat nat) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # nat : pair nat nat : pair nat (pair nat nat) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_94 = sp.local("compute_94", sp.fst(compute_88.value)) # nat : pair nat nat : pair nat (pair nat nat) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DIG 2;      # pair nat (pair nat nat) : nat : pair nat nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # nat : nat : pair nat nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_95 = sp.local("compute_95", sp.fst(compute_89.value)) # nat : nat : pair nat nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DIG 2;      # pair nat nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair nat nat : pair nat nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUG 3;      # pair nat nat : nat : nat : pair nat nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # nat : nat : nat : pair nat nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # compute_96 = sp.local("compute_96", sp.snd(compute_89.value)) # nat : nat : nat : pair nat nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DIG 3;      # pair nat nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        # self.data.prices.last += 1 # nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DIG 4;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (int %first) (int %last) : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # int : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (int %first) (int %last) : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        ADD;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : nat : nat : nat : nat
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        # self.data.prices.sum += (((compute_93.value + compute_94.value) + compute_95.value) // 3) * compute_96.value # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (pair (pair int int) (pair (map %saved int nat) (nat %sum))) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # pair int int : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # pair (map %saved int nat) (nat %sum) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DUP;        # pair (map %saved int nat) (nat %sum) : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CAR;        # map int nat : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (map %saved int nat) (nat %sum) : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDR;        # nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DIG 6;      # nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUP;        # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUG 7;      # nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PUSH nat 3; # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DIG 9;      # nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUP;        # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUG 10;     # nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DIG 11;     # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUP;        # nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUG 12;     # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DIG 13;     # nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUP;        # nat : nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUG 14;     # nat : nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        ADD;        # nat : nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        ADD;        # nat : nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        EDIV;       # option (pair nat nat) : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        IF_SOME
          {
            CAR;        # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
          }
          {
            PUSH int 97; # int : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
            FAILWITH;   # FAILED
          }; # nat : nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        MUL;        # nat : nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        ADD;        # nat : map int nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair int int : pair (map int nat) nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat
        SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : nat : nat : nat : nat
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        # self.data.prices.saved[self.data.prices.last] = (((compute_93.value + compute_94.value) + compute_95.value) // 3) * compute_96.value # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat
        DUG 5;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DUP;        # pair (map int nat) nat : pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CDR;        # nat : pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        SWAP;       # pair (map int nat) nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        CAR;        # map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))))
        DIG 10;     # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        CDDAADR;    # int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DIG 7;      # nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUP;        # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DUG 8;      # nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        PUSH nat 3; # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat : nat
        DIG 10;     # nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat : nat
        DIG 11;     # nat : nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : nat
        DIG 12;     # nat : nat : nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        ADD;        # nat : nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        ADD;        # nat : nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        EDIV;       # option (pair nat nat) : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        IF_SOME
          {
            CAR;        # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
          }
          {
            PUSH int 97; # int : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
            FAILWITH;   # FAILED
          }; # nat : nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        MUL;        # nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SOME;       # option nat : int : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # int : option nat : map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        UPDATE;     # map int nat : nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (map int nat) nat : pair int int : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair int int : pair (map int nat) nat : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : nat
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat
        # self.data.volumes.last += 1 # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat
        CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : nat
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))) : pair string (pair nat timestamp) : nat
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DUP;        # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # pair (map %saved int nat) (nat %sum) : pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum)) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CAR;        # pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DUP;        # pair (int %first) (int %last) : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CAR;        # int : pair (int %first) (int %last) : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (int %first) (int %last) : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PUSH int 1; # int : int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        ADD;        # int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # int : int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair int int : pair (map %saved int nat) (nat %sum) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : nat
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : nat
        # self.data.volumes.sum += compute_96.value # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : nat
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : nat
        CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : nat
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))))) : pair string (pair nat timestamp) : nat
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum)))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map %saved int nat) (nat %sum))) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DUP;        # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CAR;        # pair int int : pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair int int) (pair (map %saved int nat) (nat %sum)) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # pair (map %saved int nat) (nat %sum) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DUP;        # pair (map %saved int nat) (nat %sum) : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CAR;        # map int nat : pair (map %saved int nat) (nat %sum) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (map %saved int nat) (nat %sum) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDR;        # nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DIG 6;      # nat : nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        DUP;        # nat : nat : nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        DUG 7;      # nat : nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        ADD;        # nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair string (pair nat timestamp) : nat
        PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : nat
        SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : nat
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat
        # self.data.volumes.saved[self.data.volumes.last] = compute_96.value # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat
        DUG 2;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CDR;        # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DUP;        # pair (map int nat) nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CDR;        # nat : pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        SWAP;       # pair (map int nat) nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CAR;        # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DIG 7;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        CDDDADR;    # int : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : nat
        DIG 7;      # nat : int : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        SOME;       # option nat : int : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        SWAP;       # int : option nat : map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        UPDATE;     # map int nat : nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        PAIR;       # pair (map int nat) nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        SWAP;       # pair int int : pair (map int nat) nat : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        PAIR;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        PAIR;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
        SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair string (pair nat timestamp)
        PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp)
        SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        # if ((self.data.prices.last - self.data.prices.first) + 1) > self.data.numDataPoints: # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CDAAR;      # int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        PUSH int 1; # int : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        DIG 2;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int
        CDDAAAR;    # int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int
        DUG 4;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : int : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        CDDAADR;    # int : int : int : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        SUB;        # int : int : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        ADD;        # int : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        COMPARE;    # int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        GT;         # bool : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
        IF
          {
            # sp.verify(self.data.prices.first < self.data.prices.last) # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CDDAADR;    # int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int
            DUG 2;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CDDAAAR;    # int : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            COMPARE;    # int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            LT;         # bool : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            IF
              {}
              {
                PUSH string "WrongCondition: self.data.prices.first < self.data.prices.last"; # string : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
                FAILWITH;   # FAILED
              }; # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            # self.data.prices.sum = sp.as_nat(self.data.prices.sum - self.data.prices.saved[self.data.prices.first]) # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CDAR;       # map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DIG 5;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDDADAR;    # map int nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUG 7;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            CDDAAAR;    # int : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            GET;        # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            IF_SOME
              {
                # of_some: Get-item:105 # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
              }
              {
                PUSH int 105; # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
                FAILWITH;   # FAILED
              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat))))
            DIG 6;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) nat)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDDADDR;    # nat : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SUB;        # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            ISNAT;      # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            IF_SOME
              {}
              {
                PUSH int 105; # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
                FAILWITH;   # FAILED
              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp)
            SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))
            PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            # del self.data.prices.saved[self.data.prices.first] # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair int int : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair int int) (pair (map int nat) @some) : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (map int nat) @some : pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # @some : pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (map int nat) @some : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            NONE nat;   # option nat : map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DIG 7;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : option nat : map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDDAAAR;    # int : option nat : map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            UPDATE;     # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp)
            SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))
            PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            # self.data.prices.first += 1 # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair string (pair nat timestamp)
            CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp)
            DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp)
            CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp)
            SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CAR;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair int int) (pair (map int nat) @some) : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CAR;        # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair int int : pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # int : pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair int int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CAR;        # int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PUSH int 1; # int : int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            ADD;        # int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) nat) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp)
            SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))
            PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            # sp.verify(self.data.volumes.first < self.data.volumes.last) # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDDDADR;    # int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : int
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : int
            DUG 2;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDDDAAR;    # int : int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            COMPARE;    # int : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            LT;         # bool : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            IF
              {}
              {
                PUSH string "WrongCondition: self.data.volumes.first < self.data.volumes.last"; # string : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
                FAILWITH;   # FAILED
              }; # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            # self.data.volumes.sum = sp.as_nat(self.data.volumes.sum - self.data.volumes.saved[self.data.volumes.first]) # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair (pair int int) (pair (map int nat) @some) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDR;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DUP;        # pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CAR;        # pair int int : pair (pair int int) (pair (map int nat) nat) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            SWAP;       # pair (pair int int) (pair (map int nat) nat) : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDAR;       # map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DIG 5;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDDDDAR;    # map int nat : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUG 7;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            CDDDAAR;    # int : map int nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            GET;        # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            IF_SOME
              {
                # of_some: Get-item:106 # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
              }
              {
                PUSH int 106; # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
                FAILWITH;   # FAILED
              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat))))
            DIG 6;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) nat)))) : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDDDDDR;    # nat : @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SUB;        # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            ISNAT;      # option nat : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            IF_SOME
              {}
              {
                PUSH int 106; # int : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
                FAILWITH;   # FAILED
              }; # @some : map int nat : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp)
            SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
            PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            # del self.data.volumes.saved[self.data.volumes.first] # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CDR;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DUP;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CAR;        # pair (pair int int) (pair (map int nat) @some) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            SWAP;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CDR;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DUP;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CAR;        # pair int int : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            SWAP;       # pair (pair int int) (pair (map int nat) @some) : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CDR;        # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DUP;        # pair (map int nat) @some : pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CDR;        # @some : pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            SWAP;       # pair (map int nat) @some : @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CAR;        # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            NONE nat;   # option nat : map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DIG 7;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : option nat : map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDDDAAR;    # int : option nat : map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            UPDATE;     # map int nat : @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (map int nat) @some : pair int int : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp)
            SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
            PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            # self.data.volumes.first += 1 # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            CAR;        # pair string (pair nat timestamp) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
            SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair string (pair nat timestamp)
            CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp)
            DUP;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp)
            CAR;        # pair (int %numDataPoints) (address %oracleContract) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp)
            SWAP;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CAR;        # pair (pair int int) (pair (map int nat) @some) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair int int) (pair (map int nat) @some) : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CAR;        # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            DUP;        # pair int int : pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CDR;        # int : pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair int int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            CAR;        # int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PUSH int 1; # int : int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            ADD;        # int : int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair int int : pair (map int nat) @some : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (pair int int) (pair (map int nat) @some) : pair (pair int int) (pair (map int nat) @some) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair (int %numDataPoints) (address %oracleContract) : pair string (pair nat timestamp)
            SWAP;       # pair (int %numDataPoints) (address %oracleContract) : pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)) : pair string (pair nat timestamp)
            PAIR;       # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair string (pair nat timestamp)
            SWAP;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
            PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
          }
          {}; # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        # self.data.computedPrice = self.data.prices.sum // self.data.volumes.sum # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        CDR;        # pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        CAR;        # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        DUP;        # pair string (pair nat timestamp) : pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        CAR;        # string : pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        SWAP;       # pair string (pair nat timestamp) : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        CDDR;       # timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        DIG 3;      # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        DUP;        # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        CDDDDDR;    # @some : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        SWAP;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))) : @some : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        CDDADDR;    # @some : @some : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        EDIV;       # option (pair nat nat) : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        IF_SOME
          {
            CAR;        # nat : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
          }
          {
            PUSH int 109; # int : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
            FAILWITH;   # FAILED
          }; # nat : timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        PAIR;       # pair nat timestamp : string : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        SWAP;       # string : pair nat timestamp : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        PAIR;       # pair string (pair nat timestamp) : pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some)))
        PAIR;       # pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
        NIL operation; # list operation : pair (pair string (pair nat timestamp)) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair (pair int int) (pair (map int nat) @some)) (pair (pair int int) (pair (map int nat) @some))))
      }; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };