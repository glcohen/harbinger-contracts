parameter (pair (pair (string %assetCode) (pair (nat %computedPrice) (timestamp %lastUpdateTime))) (pair (pair (int %numDataPoints) (address %oracleContract)) (pair (pair %prices (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))) (pair %volumes (pair (int %first) (int %last)) (pair (map %saved int nat) (nat %sum))))));
storage   unit;
code
  {
    DUP;        # pair @parameter @storage : pair @parameter @storage
    CDR;        # @storage : pair @parameter @storage
    SWAP;       # pair @parameter @storage : @storage
    CAR;        # @parameter : @storage
    # == verify ==
    # sp.verify(((params.k0.prices.last - params.k0.prices.first) + 1) == 2) # @parameter : @storage
    PUSH int 2; # int : @parameter : @storage
    PUSH int 1; # int : int : @parameter : @storage
    DIG 2;      # @parameter : int : int : @storage
    DUP;        # @parameter : @parameter : int : int : @storage
    CDDAAAR;    # int : @parameter : int : int : @storage
    SWAP;       # @parameter : int : int : int : @storage
    CDDAADR;    # int : int : int : int : @storage
    SUB;        # int : int : int : @storage
    ADD;        # int : int : @storage
    COMPARE;    # int : @storage
    EQ;         # bool : @storage
    IF
      {}
      {
        PUSH string "WrongCondition: ((params.k0.prices.last - params.k0.prices.first) + 1) == 2"; # string : @storage
        FAILWITH;   # FAILED
      }; # @storage
    NIL operation; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };